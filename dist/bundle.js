(()=>{"use strict";var e,t={m:{},u:e=>e+".bundle.js"};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var r=t.g.document;if(!e&&r&&(r.currentScript&&(e=r.currentScript.src),!e)){var a=r.getElementsByTagName("script");if(a.length)for(var o=a.length-1;o>-1&&(!e||!/^http(s?):/.test(e));)e=a[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,function(e){e.LOAD="LOAD",e.EXEC="EXEC",e.WRITE_FILE="WRITE_FILE",e.READ_FILE="READ_FILE",e.DELETE_FILE="DELETE_FILE",e.RENAME="RENAME",e.CREATE_DIR="CREATE_DIR",e.LIST_DIR="LIST_DIR",e.DELETE_DIR="DELETE_DIR",e.ERROR="ERROR",e.DOWNLOAD="DOWNLOAD",e.PROGRESS="PROGRESS",e.LOG="LOG",e.MOUNT="MOUNT",e.UNMOUNT="UNMOUNT"}(e||(e={}));const r=(()=>{let e=0;return()=>e++})(),a=(new Error("unknown message type"),new Error("ffmpeg is not loaded, call `await ffmpeg.load()` first")),o=new Error("called FFmpeg.terminate()");new Error("failed to import ffmpeg-core.js");class s{#e=null;#t={};#r={};#a=[];#o=[];loaded=!1;#s=()=>{this.#e&&(this.#e.onmessage=({data:{id:t,type:r,data:a}})=>{switch(r){case e.LOAD:this.loaded=!0,this.#t[t](a);break;case e.MOUNT:case e.UNMOUNT:case e.EXEC:case e.WRITE_FILE:case e.READ_FILE:case e.DELETE_FILE:case e.RENAME:case e.CREATE_DIR:case e.LIST_DIR:case e.DELETE_DIR:this.#t[t](a);break;case e.LOG:this.#a.forEach((e=>e(a)));break;case e.PROGRESS:this.#o.forEach((e=>e(a)));break;case e.ERROR:this.#r[t](a)}delete this.#t[t],delete this.#r[t]})};#i=({type:e,data:t},o=[],s)=>this.#e?new Promise(((a,i)=>{const n=r();this.#e&&this.#e.postMessage({id:n,type:e,data:t},o),this.#t[n]=a,this.#r[n]=i,s?.addEventListener("abort",(()=>{i(new DOMException(`Message # ${n} was aborted`,"AbortError"))}),{once:!0})})):Promise.reject(a);on(e,t){"log"===e?this.#a.push(t):"progress"===e&&this.#o.push(t)}off(e,t){"log"===e?this.#a=this.#a.filter((e=>e!==t)):"progress"===e&&(this.#o=this.#o.filter((e=>e!==t)))}load=({classWorkerURL:r,...a}={},{signal:o}={})=>(this.#e||(this.#e=r?new Worker(new URL(r,"file:///home/pc1827/projects/music-identifier/music-identifier-edge/node_modules/@ffmpeg/ffmpeg/dist/esm/classes.js"),{type:"module"}):new Worker(new URL(t.p+t.u(138),t.b),{type:void 0}),this.#s()),this.#i({type:e.LOAD,data:a},void 0,o));exec=(t,r=-1,{signal:a}={})=>this.#i({type:e.EXEC,data:{args:t,timeout:r}},void 0,a);terminate=()=>{const e=Object.keys(this.#r);for(const t of e)this.#r[t](o),delete this.#r[t],delete this.#t[t];this.#e&&(this.#e.terminate(),this.#e=null,this.loaded=!1)};writeFile=(t,r,{signal:a}={})=>{const o=[];return r instanceof Uint8Array&&o.push(r.buffer),this.#i({type:e.WRITE_FILE,data:{path:t,data:r}},o,a)};mount=(t,r,a)=>this.#i({type:e.MOUNT,data:{fsType:t,options:r,mountPoint:a}},[]);unmount=t=>this.#i({type:e.UNMOUNT,data:{mountPoint:t}},[]);readFile=(t,r="binary",{signal:a}={})=>this.#i({type:e.READ_FILE,data:{path:t,encoding:r}},void 0,a);deleteFile=(t,{signal:r}={})=>this.#i({type:e.DELETE_FILE,data:{path:t}},void 0,r);rename=(t,r,{signal:a}={})=>this.#i({type:e.RENAME,data:{oldPath:t,newPath:r}},void 0,a);createDir=(t,{signal:r}={})=>this.#i({type:e.CREATE_DIR,data:{path:t}},void 0,r);listDir=(t,{signal:r}={})=>this.#i({type:e.LIST_DIR,data:{path:t}},void 0,r);deleteDir=(t,{signal:r}={})=>this.#i({type:e.DELETE_DIR,data:{path:t}},void 0,r)}new Error("failed to get response body reader"),new Error("failed to complete download");let i,n=[];async function c(e){if("recording"===i?.state)throw new Error("Called startRecording while recording is in progress.");const t=await navigator.mediaDevices.getUserMedia({audio:{mandatory:{chromeMediaSource:"tab",chromeMediaSourceId:e}},video:!1}),r=new AudioContext;r.createMediaStreamSource(t).connect(r.destination),i=new MediaRecorder(t,{mimeType:"audio/webm"}),i.ondataavailable=e=>n.push(e.data),i.onstop=async()=>{const e=new Blob(n,{type:"audio/webm"});if(e.size>1e4)try{const t=await async function(e){console.log("Function called to convert blob to base64 string");const t=new s;await t.load(),console.log("ffmpeg loaded"),await t.writeFile("input.mp3",await(async e=>{let t;if("string"==typeof e)t=/data:_data\/([a-zA-Z]*);base64,([^"]*)/.test(e)?atob(e.split(",")[1]).split("").map((e=>e.charCodeAt(0))):await(await fetch(e)).arrayBuffer();else if(e instanceof URL)t=await(await fetch(e)).arrayBuffer();else{if(!(e instanceof File||e instanceof Blob))return new Uint8Array;t=await(r=e,new Promise(((e,t)=>{const a=new FileReader;a.onload=()=>{const{result:t}=a;t instanceof ArrayBuffer?e(new Uint8Array(t)):e(new Uint8Array)},a.onerror=e=>{t(Error(`File could not be read! Code=${e?.target?.error?.code||-1}`))},a.readAsArrayBuffer(r)})))}var r;return new Uint8Array(t)})(e));const r=await t.readFile("input.mp3");console.log("input.mp3",r),await t.exec(["-i","input.mp3","-f","s16le","-acodec","pcm_s16le","-ac","1","-ar","44100","output.raw"]);const a=await t.readFile("output.raw");console.log("output.raw",a);const o=await async function(e){const t=new Uint8Array(e).reduce(((e,t)=>e+String.fromCharCode(t)),"");return btoa(t)}(a);return o}(e);console.log("Base64 encoded audio:",t);const r=async function(e){const t={method:"POST",headers:{"content-type":"text/plain","X-RapidAPI-Key":"API-Key","X-RapidAPI-Host":"API-Host"},body:e};try{const e=await fetch("url",t);if(!e.ok)throw new Error("Network response was not ok");const r=await e.json();return console.log("Hello from the API"),console.log("responseData: ",r),r}catch(e){console.error("Error fetching data:",e)}}(t),a=await r;console.log("Result:",a),a.matches.length>0?chrome.runtime.sendMessage({type:"SHAZAM_RESULT",data:{coverArt:a.track.images.coverart,title:a.track.title,subtitle:a.track.subtitle,time:(new Date).toLocaleString(),tagid:a.tagid,apple:a.track.hub.options[0].actions[0].uri,spotify:a.track.hub.providers[0].actions[0].uri,youtubeurl:a.track.sections[1].youtubeurl.actions[0].uri}}):chrome.runtime.sendMessage("error")}catch(e){chrome.runtime.sendMessage("error"),console.error("Error converting blob to base64:",e)}else chrome.runtime.sendMessage("noAudio");console.log(e),i=void 0,n=[]},i.start(),window.location.hash="recording"}chrome.runtime.onMessage.addListener((async e=>{if("offscreen"===e.target)switch(e.type){case"start-recording":c(e.data);break;case"stop-recording":!async function(){i.stop(),i.stream.getTracks().forEach((e=>e.stop())),window.location.hash=""}();break;default:throw new Error("Unrecognized message:",e.type)}}))})();